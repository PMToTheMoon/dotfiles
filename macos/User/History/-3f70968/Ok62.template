import 'package:flutter_bloc/flutter_bloc.dart';

class {{ class.name }} extends StatelessWidget {
  const { class.constructor }({
    super.key,
    required this.state,
    required this.loading,
    required this.success,
    required this.error,
  });

  final Widget Function(BuildContext context, {{ states.loading }})? onLoading;
  final Widget Function(BuildContext context, {{ states.success }})? onSuccess;
  final Widget Function(BuildContext context, {{ states.error }})? onError;

  final Widget Function(BuildContext context, {{ states.loading }}) loading;
  final Widget Function(BuildContext context, {{ states.success }}) success;
  final Widget Function(BuildContext context, {{ states.error }}) error;

  @override
  Widget build(BuildContext context) {
    return  BlocConsumer<SubjectBloc, SubjectState>(
      listener: (context, state) {
        state.mapOrNull(

        )
      },
      builder: (context, state) {
        return state.map(
          started: loading,
          loading: loading,
          success: success,
          error: error,
        );
      },
    );
  }
}
